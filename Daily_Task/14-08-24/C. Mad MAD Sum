///131111129..........
#include<bits/stdc++.h>
#include<sstream>
using namespace std;
#define ll          long long int
#define pi          acos(-1)
#define pb          push_back
#define mp          make_pair
#define fi          first
#define se          second
#define nl          '\n'
#define gcd(a,b)    __gcd(a,b)
#define lcm(a,b)    (a*b)/gcd(a,b)
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;

#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>

//Chess moves.........
 int dx[] = {+0, +0, -1, +1}; ///Up-down, Left-Right//
int dy[] = {+1, -1, +0, +0};
///int dx[] = {+0,+0,+1,-1,-1,+1,-1,+1}; ///King's Move// int dy[] = {-1,+1,+0,+0,+1,+1,-1,-1}; int dx[] = {-2, -2, -1, -1,  1,  1,  2,  2}; ///Knight's Move// int dy[] = {-1,  1, -2,  2, -2,  2, -1,  1};
//Constants........
const ll mod = 1e9 + 7;
const ll Max = 2e5 + 5;
const ll inf = 9223372036854775807;
ll fact[Max];

ll bigmod(ll a,ll b, ll mod){b%=(mod-1);ll result=1ll;while(b>0ll){if(b&1ll) result=result*a%mod;a=a*a%mod;b>>=1ll;}return result;}
int mul(int x, int y){return (x  * y) % mod;}
int binpow(int x, int y){int z = 1;while(y){if(y & 1) z = mul(z, x);x = mul(x, x);y >>= 1;}return z;}
int inv(int x){return binpow(x, mod - 2);}
int ncr(int a,int b){if(a<0 || b<0)return 0;if(a<b)return 0;int ans=fact[a];ans=(ans*inv(fact[b]))%mod;ans=(ans*inv(fact[a-b]))%mod;return ans;}
void fac(){fact[0]=fact[1]=1;for(ll i=2;i<Max;i++){fact[i]=(fact[i-1]*i)%mod;}}
void urmi()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
}
struct less_then_greater {
    template<typename T, typename U>
    bool operator()(T const& lhs, U const& rhs) const {
        if (lhs.first < rhs.first) return true;
        if (rhs.first < lhs.first) return false;
        return lhs.second>rhs.second;
    }
};

int main()
{
    //urmi();
    //fac();
    ll test=1;
    cin >> test;
    for(ll i1 = 1; i1 <= test; i1++){
        ll n, ans = 0;
        cin >> n;
        ll a[n];
        map<ll, ll>m;
        for(ll i = 0, c = 0; i < n; i++){
            cin >> a[i];
            ans += a[i];
            m[a[i]]++;
            if(m[a[i]] > 1){
                c = max(c, a[i]);
            }
            a[i] = c;
            ans += a[i];
        }
//        cout << "ans " << ans << nl;
//        for(ll i = 0; i < n; i++) cout << a[i] << " " ;cout << nl;
        m.clear();
        for(ll i = 0, c = 0; i < n;){
            ll j = i;
            while(j < n){
                m[a[j]]++;
                if(m[a[j]] > 1 && a[j] != a[i]){
                    //cout <<"j " <<  j << " " << a[j] << " " << m[a[i]] - 1 << " " << n- j<< nl;
                    ans += ((m[a[i]] - 1) * (n - j)) * (a[i]);
                    m[a[j]]--;
                    break;
                }
                else{
                    if(a[j] == a[i]) m[a[i]]--;
                    m[a[i]]++;
                    //cout << "i " << i << " " << a[i] << " " << m[a[i]] << nl;
                    ans += (m[a[i]] - 1) * a[i];
                }
                j++;
            }
            i = j;
        }
        cout << ans << nl;
    }
}
