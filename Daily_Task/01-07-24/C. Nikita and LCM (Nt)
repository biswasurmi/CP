///131111129..........
#include<bits/stdc++.h>
#include<sstream>
using namespace std;
#define ll         long long int
#define pi          acos(-1)
#define pb          push_back
#define mp          make_pair
#define fi          first
#define se          second
#define nl          '\n'
#define gcd(a,b)    __gcd(a,b)
#define lcm(a,b)    (a*b)/gcd(a,b)
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define orderedmultiset tree<ll, null_type,less<ll>, rb_tree_tag,tree_order_statistics_node_update>
#define ordered_set tree<ll, null_type,less_equal<ll>, rb_tree_tag,tree_order_statistics_node_update>
//Chess moves.........
 int dx[] = {+0, +0, -1, +1}; ///Up-down, Left-Right//
int dy[] = {+1, -1, +0, +0};
///int dx[] = {+0,+0,+1,-1,-1,+1,-1,+1}; ///King's Move// int dy[] = {-1,+1,+0,+0,+1,+1,-1,-1}; int dx[] = {-2, -2, -1, -1,  1,  1,  2,  2}; ///Knight's Move// int dy[] = {-1,  1, -2,  2, -2,  2, -1,  1};
//Constants........
const ll mod = 1e9 + 7;
const ll Max = 1e6 + 5;
const ll inf = 1e18+5;
ll fact[Max];

ll bigmod(ll a,ll b, ll mod){b%=(mod-1);ll result=1ll;while(b>0ll){if(b&1ll) result=result*a%mod;a=a*a%mod;b>>=1ll;}return result;}
int mul(int x, int y){return (x  * y) % mod;}
int binpow(int x, int y){int z = 1;while(y){if(y & 1) z = mul(z, x);x = mul(x, x);y >>= 1;}return z;}
int inv(int x){return binpow(x, mod - 2);}
int ncr(int a,int b){if(a<0 || b<0)return 0;if(a<b)return 0;int ans=fact[a];ans=(ans*inv(fact[b]))%mod;ans=(ans*inv(fact[a-b]))%mod;return ans;}
void fac(){fact[0]=fact[1]=1;for(ll i=2;i<Max;i++){fact[i]=(fact[i-1]*i)%mod;}}
void urmi()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
}
struct less_then_greater {
    template<typename T, typename U>
    bool operator()(T const& lhs, U const& rhs) const {
        if (lhs.first < rhs.first) return true;
        if (rhs.first < lhs.first) return false;
        return lhs.second>rhs.second;
    }
};

int main()
{
    urmi();
    //fac();
    ll test=1;
    cin >> test;
    for(ll i1 = 1; i1 <= test; i1++){
        ll n;
        cin >> n;
        ll a[n];
        map<ll, ll>m;
        ll lc = 1;
        for(int i = 0; i < n; i++) cin >> a[i];
        sort(a, a+ n);
        for(int i= 0; i < n; i++){
            m[a[i]]++;
            lc = lcm(lc, a[i]);
            if(lc > a[n - 1]){
                break;
            }
        }
        //cout << lc << nl;
        if(lc > a[n - 1]){
            cout << n << nl;
            continue;
        }
        vector<ll>v;
        for(int i = 1; i * i <= a[n - 1]; i++){
            if(a[n - 1] % i == 0){
                ll c = i;
                ll d = (a[n - 1] / i);
                if(!m[c]){
                    v.pb(c);
                }
                if(c != d && (!m[d])){
                    v.pb(d);
                }
            }
        }
        ll ans = 0;
        //cout << v.size() << nl;
        //for(int i : v) cout << i << " ";cout << nl;
        for(int i = 0; i < v.size(); i++){
            ll c = v[i], cnt = 0, lc = 1;
            for(ll j : a){
                if(c % j == 0){
                    cnt++;
                    lc = lcm(lc, j);
                }
            }
            if(lc == c) ans = max(ans, cnt);
        }
        cout << ans << nl;
    }
}
