class Solution {
public:
    int pre[50005] = {0};
    int pre1[50005] = {0};
    int subarraysDivByK(vector<int>& nums, int k) {
        map<int, int>m;
        int ans = 0;
        int n = nums.size();
        for(int i = 0; i < n;i++){
            pre[i + 1] = pre[i] + nums[i];
            pre1[i + 1] = pre[i + 1] % k;
            m[pre1[i + 1]]++;
        }
        for(int i = 1; i <= n; i++){
            int c, d, e;
            if(pre1[i - 1] >= 0){
                c = pre1[i - 1];
                d = k + pre1[i - 1];
                e = -k + pre1[i - 1];
            }
            else{
                c = - (-pre1[i - 1]);
                d = k - (-pre1[i -  1]);
                e = -k - (- pre1[i - 1]);
            }
            c %= k;
            d %= k;
            //cout << i << " "<< pre1[i - 1] << " " << c << " " << d << endl;
            if(c == d && d == e) ans += m[c];
            else if(c == d){
                ans += m[c];
                ans += m[e];
            }
            else if(c == e){
                ans += m[c];
                ans += m[d];
            }
            else if(d == e){
                ans += m[d];
                ans += m[c];
            }
            else ans += m[c], ans += m[d], ans += m[e];
            m[pre1[i]]--;
        }
        return ans;
    }
};
