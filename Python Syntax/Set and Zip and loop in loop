///https://leetcode.com/problems/magic-squares-in-grid/description/?envType=daily-question&envId=2024-08-09
class Solution(object):
    def numMagicSquaresInside(self, grid):
        """
        :type grid: List[List[int]]
        :rtype: int
        """
        cnt = 0;
        for i in range (len(grid) - 2):
            i1 = i + 2
            for j in range (len(grid) - 2):
                j1 = j + 2
                s = set()
                ss = set()
                for i2 in range(i, i1 + 1):
                    s1 = 0
                    for j2 in range(j, j1 + 1):
                        s.add(grid[i2][j2])
                        s1 += grid[i2][j2]
                    ss.add(s1);
                for j2 in range(j, j1 + 1):
                    s1 = 0;
                    for i2 in range(i, i1 + 1):
                        s1 += grid[i2][j2];
                    ss.add(s1);
                s1 = 0;
                for i2, j2 in zip(range(i, i1 + 1), range(j1, j - 1, -1)):
                    s1 += grid[i2][j2];
                ss.add(s1);
                s1 = 0;
                for i2, j2 in zip(range(i, i1 + 1), range(j, j1 + 1)):
                    s1 += grid[i2][j2];
                ss.add(s1);
                if all (x in s for x in range(1, 10)) and len(ss) == 1:
                    cnt += 1
        return cnt;
        
